
spring:
  application:
    name: notifications
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
  mvc:
    servlet:
      path: /notification

  cloud:
    # KAFKA STREAM CONFIG.
    function:
      definition: nfReplyConsumer;dnsPollStatusConsumer;dnsPollStatusDelayConsumer
    stream:
      bindings:
        nfProvisionRequestTopic:
          destination: notifications.request
          group: notifications

        nfReplyConsumer-in-0:
          destination: notifications.reply
          group: notifications
      kafka:
        default:
          producer.configuration.value.serializer: org.apache.kafka.common.serialization.ByteArraySerializer
          consumer.configuration.value.deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
        binder:
          auto-add-partitions: true
          auto-create-topics: true
          minPartitionCount: ${kafka.minPartitionCount}
          replicationFactor: ${kafka.replicationFactor}
          required-acks: -1
          brokers:
            - "localhost:9092"
        bindings:
          nfReplyConsumer-in-0:
            consumer:
              enableDlq: true
              dlqName: notifications.reply-dlq
              autoCommitOnError: true

  couchbase:
    connection-string: couchbases://cb.hcyl0w3dx85m4gac.cloud.couchbase.com
    username: admin
    password: !kAkTEwC5LHdTPn
  data:
    couchbase:
      bucket-name: notifications

management:
  endpoints:
    web:
      exposure:
        include: "self, prometheus, health-path, health, metrics-requiredMetricName, metrics, info, shutdown"
  endpoint:
    health:
      probes:
        enabled: true
    shutdown:
      enabled: true
server:
  shutdown: graceful
  forward-headers-strategy: framework

kafka:
  enable: true
  producer-destination: notifications.request
  replicationFactor: 1
  minPartitionCount: 8

